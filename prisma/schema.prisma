// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum Role {
  ADMIN
  COACH
  SWIMMER
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?
  role      Role
  createdAt DateTime @default(now()) @map("created_at")

  coach   Coach?
  swimmer Swimmer?

  @@map("users")
}

model Coach {
  id        String  @id
  firstName String  @map("first_name")
  lastName  String? @map("last_name")
  avatar    String?

  user User @relation(fields: [id], references: [id], onDelete: Cascade)

  team Team?

  @@map("coaches")
}

model Swimmer {
  id        String  @id
  firstName String  @map("first_name")
  lastName  String? @map("last_name")
  avatar    String?

  teamId     String?     @unique @map("team_id")
  dailyForms DailyForm[]
  user       User        @relation(fields: [id], references: [id], onDelete: Cascade)
  team       Team?       @relation(fields: [teamId], references: [id])

  @@map("swimmers")
}

model Team {
  id       String @id @default(cuid())
  coachId  String @unique @map("coach_id")
  teamCode String @unique @map("team_code")

  coach Coach @relation(fields: [coachId], references: [id])

  swimmers Swimmer[]

  @@map("teams")
}

model DailyForm {
  id           String   @id @default(cuid())
  date         DateTime @default(now())
  sleepHours   Int      @map("sleep_hours")
  sleepQuality Int      @map("sleep_quality")
  musclePain   Int      @map("muscle_pain")
  fatigue      Int
  stress       Int

  swimmerId String  @map("swimmer_id")
  swimmer   Swimmer @relation(fields: [swimmerId], references: [id], onDelete: Cascade)

  @@map("daily_forms")
}
